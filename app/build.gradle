import java.text.SimpleDateFormat

plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.kapt"
}

android {
    def versionMajor = 0
    def versionMinor = 1
    def versionPatch = 0
    def versionBuild = 0 // Bump for dogfood builds, public betas, etc.

    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.exsilicium.scripturememory"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        baseline file("lint-baseline.xml")
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable = true
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        it.buildConfigField 'String', 'BUILD_TIME', "\"${buildTime()}\""
    }

    flavorDimensions "tier"

    productFlavors {
        free {
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
        }
        full {
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
        }
    }
}

static def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

static def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':common')
    implementation project(':network')
    implementation project(':passagedetail')
    implementation project(':passagepicker')
    implementation project(':screennavigator')

    implementation deps.androidSupportCard
    implementation deps.androidSupportDesign
    implementation deps.androidSupportRecyclerView

    implementation deps.butterknife
    kapt deps.butterknifeCompiler
    implementation deps.kotterknife

    kapt deps.daggerAndroidProcessor
    kapt deps.daggerCompiler

    implementation deps.rxAndroid
    implementation deps.rxBinding
    implementation deps.rxBindingDesign
    implementation deps.rxRelay

    implementation deps.scriptureCore
}

dependencies {
    testImplementation testDeps.junit
}

dependencies {
    androidTestImplementation(testDeps.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

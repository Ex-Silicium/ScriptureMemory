version: 2

references:
  ## Cache
  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle

  ## Workspace
  workspace: &workspace
    ~/workspace
  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace
  attach_firebase_workspace: &attach_firebase_workspace
    attach_workspace:
      at: *workspace
  persist_firebase_workspace: &persist_firebase_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - firebase

  ## Docker image configuration
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  ## Keys
  # Firebase Service Account
  export_firebase_key: &export_firebase_key
    run:
      name: Export Firebase Service Account key environment variable
      command: echo 'export FIREBASE_SERVICE_KEY="FIREBASE_SERVICE_KEY"' >> $BASH_ENV
  decode_firebase_key: &decode_firebase_key
    run:
      name: Decode Firebase Service Account credentials
      command: echo FIREBASE_SERVICE_KEY | base64 -D > ${HOME}/client-secret.json

jobs:
  ## Build debug APK and instrumented test APK
  build_debug:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Gradle build (debug)
          command: ./gradlew -PciBuild=true :app:assembleDebug :app:assembleAndroidTest
      - persist_to_workspace:
          root: *workspace
          paths:
            - app/build/outputs/apk
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/

  ## Run Lint & Detekt static analysis
  static_analysis:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Run Lint
          command: ./gradlew lint
      - run:
          name: Run Detekt
          command: ./gradlew detektCheck
      - store_artifacts:
          path: build/reports
          destination: reports
      - store_artifacts:
          path: app/build/reports
          destination: reports/app
      - store_artifacts:
          path: common/build/reports
          destination: reports/common
      - store_artifacts:
          path: network/build/reports
          destination: reports/network
      - store_artifacts:
          path: passagedetail/build/reports
          destination: reports/passagedetail
      - store_artifacts:
          path: passagepicker/build/reports
          destination: reports/passagepicker
      - store_artifacts:
          path: screennavigator/build/reports
          destination: reports/screennavigator
      - store_artifacts:
          path: squaretextview/build/reports
          destination: reports/squaretextview
      - store_artifacts:
          path: testutils/build/reports
          destination: reports/testutils

  ## Run unit tests
  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Run Unit Tests
          command: ./gradlew -PciBuild=true testDebugUnitTest
      - store_artifacts:
          path: build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - store_test_results:
          path: common/build/test-results
      - store_test_results:
          path: network/build/test-results
      - store_test_results:
          path: passagedetail/build/test-results
      - store_test_results:
          path: passagepicker/build/test-results
      - store_test_results:
          path: screennavigator/build/test-results
      - store_test_results:
          path: squaretextview/build/test-results
      - store_test_results:
          path: testutils/build/test-results

  ## Run instrumented tests
  test_instrumented:
    <<: *android_config
    steps:
      - *attach_debug_workspace
      - *export_firebase_key
      - *decode_firebase_key
      - run:
          name: Set Google Cloud target project
          command: gcloud config set project scripture-memory
      - run:
          name: Authenticate with Google Cloud
          command: gcloud auth activate-service-account firebase-adminsdk-27pvd@scripture-memory.iam.gserviceaccount.com --key-file ${HOME}/client-secret.json
      - run:
          name: Run instrumented test on Firebase Test Lab
          command: gcloud firebase test android run --app app/build/outputs/apk/free/debug/app-free-debug.apk --test app/build/outputs/apk/androidTest/free/debug/app-free-debug-androidTest.apk --device model=Nexus6,version=21,locale=en_US,orientation=portrait --environment-variables coverage=true,coverageFile=/sdcard/tmp/code-coverage/connected/coverage.ec --directories-to-pull=/sdcard/tmp
      - run:
          name: Create directory to store test results
          command: mkdir firebase
      - run:
          name: Download instrumented test results from Firebase Test Lab
          command: gsutil -m cp -r -U "`gsutil ls gs://test-lab-rkuvpxf8dp0t8-n6x9hns1nsjy8 | tail -1`*" /root/workspace/firebase/
      - *persist_firebase_workspace
      - store_artifacts:
          path: firebase/
          destination: /firebase/

workflows:
  version: 2
  workflow:
    jobs:
      - build_debug
      - static_analysis
      - test_unit
      - test_instrumented:
          requires:
            - build_debug
